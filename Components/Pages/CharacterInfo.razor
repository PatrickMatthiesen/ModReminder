@page "/CharacterInfo"
@inject HttpClient Http
@inject AuthenticationStateProvider _authenticationStateProvider
@attribute [Authorize]
@using BungieSharper.Entities.Destiny.Responses


<h3>Profile and Character info</h3>

@*<EditForm EditContext="@editContext" OnValidSubmit="GetBungieUserDetails" class="d-flex m-3">
    <InputText id="membershipId" class="form-control" placeholder="bungie user id"
               @bind-Value="membershipId" />
    <button class="button" type="submit" @onclick="GetBungieUserDetails">
        <span class="oi oi-pencil"></span>
    </button>
</EditForm>*@

<div class="rounded border border-primary p-3 d-inline-block m-3 col">
    @if (profile != null @*&& membershipId != ""*@)
    {
        <h4>Display name: @profile.DisplayName</h4>
        <p>Is Primary profile: @profile.IsCrossSavePrimary</p>
        <div>Bungie name: @profile.BungieGlobalDisplayName#@profile.BungieGlobalDisplayNameCode</div>
        <div>Membershi Id: @profile.MembershipId</div>
        <div>Membershi Type: @profile.MembershipType</div>
        <div class="">
            <p class="font-weight-bold">some box</p>
        </div>
    }
    else
    {
        <p>No profile found</p>
    }
</div>

<div class="rounded border border-primary p-3 d-inline-block m-3 col">
    @if (vendorsResponce != null)
    {
        <h4>VendorResponce loaded</h4>
    }
    else
    {
        <p>Vendor responce failed</p>
    }
</div>


@code {
    //private string membershipId = "";

    private DestinyProfileUserInfoCard? profile = null;
    private DestinyVendorsResponse? vendorsResponce = null;

    //private EditContext editContext;

    protected override async Task OnInitializedAsync()
    {
        //editContext = new EditContext(membershipId);
        GetBungieUserDetails();
    }

    private async void GetBungieUserDetails()
    {
        var userId = await _authenticationStateProvider.GetUserId();
        var linkedprofile = await Http.GetFromJsonAsync<DestinyLinkedProfilesResponse>($"api/Bungie/LinkedProfiles/{userId}");
        profile = linkedprofile.Profiles.FirstOrDefault();
        StateHasChanged();
        GetSalesDetails();
    }

    private async void GetSalesDetails()
    {
        var userId = await _authenticationStateProvider.GetUserId();
        vendorsResponce = await Http.GetFromJsonAsync<DestinyVendorsResponse>($"api/Bungie/Vendors/{profile.MembershipId}/{(int)profile.MembershipType}/{userId}");
        StateHasChanged();
    }
}